@page
@model SnackisApp.Pages.ThreadModel

@using Microsoft.AspNetCore.Identity;
@using SnackisApp.Areas.Identity.Data;
@using SnackisApp.Gateways;
@using SnackisApp.Models;


@inject UserManager<SnackisUser> _userManager;
@inject ISubjectGateway _subjectGateway;
@inject IPostGateway _postGateway;

@{
    List<Post> allPosts = await _postGateway.GetPosts();
    Subject subject = await _subjectGateway.GetSubject(Model.StartPost.SubjectId);
    List<SnackisUser> users = _userManager.Users.ToList();
    SnackisUser user;
    TimeZoneInfo timeZone = TimeZoneInfo.FindSystemTimeZoneById("Central Europe Standard Time");
}


<h4 class="text-center">@subject.Name</h4>

<p class="text-hide m-0">@(user = users.FirstOrDefault(u => u.Id == Model.StartPost.UserId))</p>
<div class="ml-0 pl-0">
    <component type="typeof(Components.ShowPost)" render-mode="ServerPrerendered"
               param-Post='@Model.StartPost' param-Subject='@subject' param-User="@user" param-level="1" />
</div>



@if (Model.StartPost.Posts != null)
{
    List<Post> answers1 = Model.StartPost.Posts;
    foreach (Post postLevel1 in answers1)
    {
        <p class="text-hide m-0">@(user = users.FirstOrDefault(u => u.Id == postLevel1.UserId))</p>
        <div class="ml-1 pl-1">
            <component type="typeof(Components.ShowPost)" render-mode="ServerPrerendered" param-Post='@postLevel1' param-Subject='@subject' param-User="@user" param-level="2" />
        </div>
        if (postLevel1.Posts != null)
        {
            List<Post> answers2 = postLevel1.Posts;
            foreach (Post postLevel2 in answers2)
            {
                <p class="text-hide m-0">@(user = users.FirstOrDefault(u => u.Id == postLevel2.UserId))</p>
                <div class="ml-2 pl-2">
                    <component type="typeof(Components.ShowPost)" render-mode="ServerPrerendered" param-Post='@postLevel2' param-Subject='@subject' param-User="@user" param-level="3" />
                </div>
                if (postLevel2.Posts != null)
                {
                    List<Post>
                        answers3 = postLevel2.Posts;
                    foreach (Post postLevel3 in answers3)
                    {
                        <p class="text-hide m-0">@(user = users.FirstOrDefault(u => u.Id == postLevel3.UserId))</p>
                        <div class="ml-3 pl-3">
                            <component type="typeof(Components.ShowPost)" render-mode="ServerPrerendered" param-Post='@postLevel3' param-Subject='@subject' param-User="@user" param-level="4" />
                        </div>
                        if (postLevel3.Posts != null)
                        {
                            List<Post>
                                answers4 = postLevel3.Posts;
                            foreach (Post postLevel4 in answers4)
                            {
                                <p class="text-hide m-0">@(user = users.FirstOrDefault(u => u.Id == postLevel4.UserId))</p>
                                <div class="ml-4 pl-4">
                                    <component type="typeof(Components.ShowPost)" render-mode="ServerPrerendered" param-Post='@postLevel4' param-Subject='@subject' param-User="@user" param-level="5" />
                                </div>
                            }
                        }
                    }
                }
            }
        }
    }
}

