@page
@model SnackisApp.Pages.GM.IndexModel

@using Microsoft.AspNetCore.Identity;
@using Areas.Identity.Data;
@using SnackisApp.Data;
@using Microsoft.EntityFrameworkCore;
@using SnackisApp.Models


@inject UserManager<SnackisUser> _userManager;
@inject SnackisContext _context;

@{
    SnackisUser currentUser = await _userManager.GetUserAsync(User);
    Membership membership;
}


<div class="pt-3">
    <a class="btn btn-primary btn-sm" asp-page="/GM/CreateGroup">Skapa ny grupp</a>
</div>

<br />

<h4 class="text-info">Grupper skapade av mig</h4>
@if (Model.MyGroups.Count == 0)
{
    <p>Inga skapade grupper</p>
}
else
{

    @foreach (var group in Model.MyGroups)
    {
        <div>
            <component type="typeof(Components.ShowGroup)" render-mode="ServerPrerendered" 
                       param-Group='@group' param-CurrentUser="@currentUser" param-NameIsLink="@true" />
        </div>
        <br />
    }
}

<hr />

<h4 class="text-info">Inbjuden till</h4>
@if (Model.InvitedToGroups.Count == 0)
{
    <p>Inga väntande inbjudningar</p>
}
else
{
    @foreach (var group in Model.InvitedToGroups)
    {
        <div>
            <component type="typeof(Components.ShowGroup)" render-mode="ServerPrerendered"
                       param-Group='@group' param-CurrentUser="@currentUser" param-NameIsLink="@false"/>
        </div>

        <p hidden>@(membership = _context.Membership.FirstOrDefault(ms => ms.UserId == currentUser.Id && ms.GroupId == group.Id))</p>
        <a class="btn btn-success btn-sm mt-1" href="/gm/index?AddMembershipId=@membership.Id">Acceptera</a>
        <a class="btn btn-danger btn-sm mt-1" href="gm/index?DeleteMembershipId=@membership.Id">Avfärda</a>

        <br />
        <br />
    }
}

<hr />

<h4 class="text-info">Medlem i</h4>
@if (Model.AcceptedGroups.Count == 0)
{
    <p>Inte medlem i någon grupp</p>
}
else
{
    @foreach (var group in Model.AcceptedGroups)
    {
        <div>
            <component type="typeof(Components.ShowGroup)" render-mode="ServerPrerendered" 
                       param-Group='@group' param-CurrentUser="@currentUser" param-NameIsLink="@true"/>
        </div>

        @if (group.UserId != currentUser.Id) @*Skaparen av gruppen kan inte lämna den*@
        {
            <p hidden>@(membership = _context.Membership.FirstOrDefault(ms => ms.UserId == currentUser.Id && ms.GroupId == group.Id))</p>
            <a class="btn btn-danger btn-sm mt-1 mb-4" href="gm/index?DeleteMembershipId=@membership.Id">Lämna</a>
        }

        <br />
    }
}





@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}


